{"version":3,"sources":["components/sideNav/style.module.css","components/screens/view/dayBook/style.module.css","components/screens/managePersons/style.module.css","components/screens/view/style.module.css","ebm/style.module.css","utility/input/input.module.css","components/screens/createEntry/style.module.css","components/screens/view/transactionTypeBook/style.module.css","components/header/style.module.css","utility/table/style.module.css","components/screens/manageProducts/style.module.css","utility/button/style.module.css","components/screens/view/productBook/style.module.css","components/screens/view/personBook/style.module.css","utility/bluePrints/index.js","utility/input/index.js","indexedDB/core.js","indexedDB/index.js","utility/helperFunctions/index.js","utility/button/index.js","utility/validationRules/index.js","components/screens/createEntry/index.js","utility/table/index.js","components/screens/managePersons/index.js","components/screens/manageProducts/index.js","components/screens/view/dayBook/index.js","components/screens/view/transactionTypeBook/index.js","components/screens/view/productBook/index.js","components/screens/view/personBook/index.js","utility/svgIcons/icons.jsx","components/screens/view/index.js","components/sideNav/index.js","components/header/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","_productsBlueprint","name","type","label","_personsBlueprint","_createEntryCommonBlueprint","_createEntryProductBlueprint","_createEntryBluprints","Input","error","value","options","boxStyle","labelStyle","inputStyle","placeholder","props","className","classes","inputBox","style","htmlFor","select","id","map","i","input","errorMessage","open","dbName","dbVersion","Promise","resolve","reject","openEvent","indexedDB","onsuccess","e","target","result","onerror","getAllKeys","db","storeName","transaction","objectStore","getDataByKey","key","get","getDataByIndex","indexName","indexValue","index","getAll","getAllData","addData","data","add","openRequest","_saveData","a","request","_getDataByIndex","indexParams","_getDataByKey","getParams","_getAllData","_getAllKeys","keys","console","log","_createStateObject","blueprint","accumulator","obj","onupgradeneeded","oldVersion","createObjectStore","keyPath","personsStore","createIndex","entriesStore","_generateUniquePersonId","savedIds","keyLength","saveThisId","includeOnly","uniqueKey","length","Math","floor","random","validateAndSetErrors","inputData","inputValidationRules","setErrors","errors","rules","Object","forEach","every","ruleType","validate","isErrors","keysCount","noOfInputs","prevErrors","Button","onClick","children","button","managePersonsRules","personId","required","fixedLength","personName","minLength","maxLength","personSurName","personContact","personAddress","createEntryCommonRules","transactionDate","person","transactionType","description","createEntryProductRules","product","quantity","greaterThan","pricePer","createEntryRules","cashReceived","totalDiscount","amountLeft","cashPaid","initialEntry","rememberEntryObj","CreateEntry","persons","products","save","useState","entry","setEntry","validateOnChange","setValidateOnChange","personsList","productsList","productName","transactionTypesList","useEffect","setEntryObj","prevState","totalAmount","remember","entryObj","hasOwnProperty","generateInputElements","configObj","optionsList","disabled","onChange","prev","getInputValue","entryValidationRules","createEntryBox","leftBox","divider","rightBox","alert","timeStamp","Date","getTime","Table","headerRow","bodyRows","caption","table","thead","tbody","initialPersonObj","ManagePersons","setPerson","editPerson","setEditPerson","searchBy","setSearchBy","searchText","setSerchText","searchResult","setSearchResult","updatePerson","personValidationRules","updatedData","config","put","_updateStoreData","indexArgs","managePersonsBox","personBox","title","inputEl","handlePersonIdChange","savePerson","editPersonTogglerBtn","searchPersonBox","searchType","defaultProductObj","ManageProducts","setProduct","manageProductsBox","DayBook","dayBook","setDayBook","entriesDate","setEntriesDate","stickyRight","setstickyRight","stickyRef","useRef","getAndSetEntries","currentDate","year","getFullYear","month","getMonth","date","getDate","toString","fullDate","ref","current","clientWidth","width","right","window","onresize","event","stickyHeader","stickyReceived","stickyPaid","tableData","columnReceived","columnPaid","TransactionTypeBook","entries","setEntries","sticky","ProductBook","selectedProduct","purchasesTableData","salesTableData","row","push","twoColumns","PersonBook","selectedPerson","debitTableData","creditTableData","amount","ExpandDown","fill","height","viewBox","d","ExpandUp","MenuBars","FilterIcon","View","entryOf","selectedValue","setSelectedValue","setOptionsList","showFilterBar","setShowFilterBar","optionsListArr","getAndSetOptionsList","viewContainer","filterBar","slideUpFilterBar","filterIconBox","filterBarToggler","viewEntriesBox","ViewEntriesWithFilterBar","SideNav","setScreen","setEntryOf","showSideNav","viewDropdown","setViewDropdown","handleClick","screen","sideNavBar","sideNav_Header","brandBox","brandLogo","brandName","btnClose","navList","btnList","btnWithIcon","btnText","btnIcon","navListNested","screenTitles","Header","activeScreen","viewEntriesOf","header","sideBarToggler","activeScreenTitle","info","App","sbm","setSbm","setShowSideNav","saveToLocal","prevSbm","mainContainer","overlay","sideNavContainer","show_sideNav","subContainer","headerContainer","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1db88f43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideNavBar\":\"style_sideNavBar__1gc55\",\"sideNav_Header\":\"style_sideNav_Header__1ymjZ\",\"brandBox\":\"style_brandBox__8_y8p\",\"brandLogo\":\"style_brandLogo__DUzPW\",\"brandName\":\"style_brandName__1AaQH\",\"btnClose\":\"style_btnClose__3ZZxn\",\"navList\":\"style_navList__Edyxc\",\"navListNested\":\"style_navListNested__treNu\",\"btnList\":\"style_btnList__11MWw\",\"active\":\"style_active__1ZoSw\",\"btnWithIcon\":\"style_btnWithIcon__av1ls\",\"btnIcon\":\"style_btnIcon__XIbpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stickyReceived\":\"style_stickyReceived__1-xiL\",\"stickyPaid\":\"style_stickyPaid__2A0zn\",\"stickyHeader\":\"style_stickyHeader__2suL8\",\"columnReceived\":\"style_columnReceived__1B3mh\",\"columnPaid\":\"style_columnPaid__ObB2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"managePersonsBox\":\"style_managePersonsBox__2Oo67\",\"personBox\":\"style_personBox__3eI6x\",\"title\":\"style_title__2Oj1Q\",\"editPersonTogglerBtn\":\"style_editPersonTogglerBtn__ieKif\",\"searchPersonBox\":\"style_searchPersonBox__2CJhn\",\"divider\":\"style_divider__kJexP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewContainer\":\"style_viewContainer__2Zns-\",\"filterBar\":\"style_filterBar__3YDIN\",\"filterIconBox\":\"style_filterIconBox__2_OeN\",\"filterBarToggler\":\"style_filterBarToggler__Wd5pl\",\"slideUpFilterBar\":\"style_slideUpFilterBar__1j3Va\",\"viewEntriesBox\":\"style_viewEntriesBox__tkyX4\",\"ViewEntriesWithFilterBar\":\"style_ViewEntriesWithFilterBar__1bTvz\",\"entries\":\"style_entries__aElos\",\"stickyReceived\":\"style_stickyReceived__1qvqk\",\"stickyPaid\":\"style_stickyPaid__2spNj\",\"alignRight\":\"style_alignRight__3cYoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"style_mainContainer__kRAvz\",\"overlay\":\"style_overlay__22qP3\",\"sideNavContainer\":\"style_sideNavContainer__2nk8Y\",\"show_sideNav\":\"style_show_sideNav__1mlPK\",\"subContainer\":\"style_subContainer__2vcMS\",\"headerContainer\":\"style_headerContainer__1Jf_Q\",\"content\":\"style_content__1TeKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBox\":\"input_inputBox__20rgj\",\"errorMessage\":\"input_errorMessage__YCTKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createEntryBox\":\"style_createEntryBox__fiFcj\",\"leftBox\":\"style_leftBox__2B3up\",\"rightBox\":\"style_rightBox__10fhW\",\"productBox\":\"style_productBox__rjuZk\",\"transactionTypeBox\":\"style_transactionTypeBox__2GZ0I\",\"divider\":\"style_divider__Iy5uu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sticky\":\"style_sticky__3CgMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__2f4ar\",\"sideBarToggler\":\"style_sideBarToggler__tqshy\",\"activeScreenTitle\":\"style_activeScreenTitle__1rjaZ\",\"info\":\"style_info__18nU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__ej9Vg\",\"thead\":\"style_thead__2SsX9\",\"tbody\":\"style_tbody__nTbmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"manageProductsBox\":\"style_manageProductsBox__2VDI4\",\"title\":\"style_title__2PiLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__1wOG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twoColumns\":\"style_twoColumns__39DA_\",\"grow_1\":\"style_grow_1__6HGhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twoColumns\":\"style_twoColumns__JlV-p\",\"grow_1\":\"style_grow_1__2q_gF\"};","// MANAGE PRODUCTS\r\nexport const _productsBlueprint = [\r\n  {\r\n    name: 'productName',\r\n    type: 'text',\r\n    label: 'Product Name'\r\n  },\r\n  {\r\n    name: 'productBrand',\r\n    type: 'text',\r\n    label: 'Product Brand'\r\n  },\r\n  {\r\n    name: 'productUnits',\r\n    type: 'text',\r\n    label: 'Product Units'\r\n  }\r\n]\r\n// MANAGE PERSONS\r\nexport const _personsBlueprint = [\r\n  {\r\n    name: 'personId',\r\n    type: 'text',\r\n    label: 'Person Id'\r\n  },\r\n  {\r\n    name: 'personName',\r\n    type: 'text',\r\n    label: 'Person Name'\r\n  },\r\n  {\r\n    name: 'personSurName',\r\n    type: 'text',\r\n    label: 'Person Sur Name'\r\n  },\r\n  {\r\n    name: 'personContact',\r\n    type: 'number',\r\n    label: 'Person Contact'\r\n  },\r\n  {\r\n    name: 'personAddress',\r\n    type: 'text',\r\n    label: 'Person Address'\r\n  }\r\n];\r\n\r\n// CREATE ENTRY\r\nexport const _createEntryCommonBlueprint = [\r\n  {\r\n    name: 'transactionDate',\r\n    type: 'date',\r\n    label: 'Transaction Date'\r\n  },\r\n  {\r\n    name: 'person',\r\n    type: 'select',\r\n    label: 'Person'\r\n  },\r\n  {\r\n    name: 'transactionType',\r\n    type: 'select',\r\n    label: 'Transaction Type'\r\n  },\r\n  {\r\n    name: 'description',\r\n    type: 'textarea',\r\n    label: 'Description'\r\n  },\r\n]\r\n\r\nconst _createEntryProductBlueprint = [\r\n  {\r\n    name: 'product',\r\n    type: 'select',\r\n    label: 'Product'\r\n  },\r\n  {\r\n    name: 'quantity',\r\n    type: 'number',\r\n    label: 'Quantity'\r\n  },\r\n  {\r\n    name: 'pricePer',\r\n    type: 'number',\r\n    label: 'Price/Per'\r\n  },\r\n  {\r\n    name: 'totalAmount',\r\n    type: 'number',\r\n    label: 'Total Amount'\r\n  },\r\n]\r\n\r\nexport const _createEntryBluprints = {\r\n  'sales': [\r\n    ..._createEntryProductBlueprint,\r\n    {\r\n      name: 'cashReceived',\r\n      type: 'number',\r\n      label: 'CashReceived'\r\n    },\r\n    {\r\n      name: 'totalDiscount',\r\n      type: 'number',\r\n      label: 'Total Discount'\r\n    },\r\n    {\r\n      name: 'amountLeft',\r\n      type: 'number',\r\n      label: 'Amount Left'\r\n    },\r\n  ],\r\n  'purchases': [\r\n    ..._createEntryProductBlueprint,\r\n    {\r\n      name: 'cashPaid',\r\n      type: 'number',\r\n      label: 'CashPaid'\r\n    },\r\n    {\r\n      name: 'totalDiscount',\r\n      type: 'number',\r\n      label: 'Total Discount'\r\n    },\r\n    {\r\n      name: 'amountLeft',\r\n      type: 'number',\r\n      label: 'Amount Left'\r\n    },\r\n  ],\r\n  'payments': [\r\n    {\r\n      name: 'cashPaid',\r\n      type: 'number',\r\n      label: 'CashPaid'\r\n    },\r\n    {\r\n      name: 'totalDiscount',\r\n      type: 'number',\r\n      label: 'Total Discount'\r\n    },\r\n  ],\r\n  'receipts': [\r\n    {\r\n      name: 'cashReceived',\r\n      type: 'number',\r\n      label: 'CashReceived'\r\n    },\r\n    {\r\n      name: 'totalDiscount',\r\n      type: 'number',\r\n      label: 'Total Discount'\r\n    },\r\n  ]\r\n}\r\n","import React from 'react';\r\nimport classes from './input.module.css';\r\n\r\nfunction Input({\r\n    type='text', \r\n    label, \r\n    error, \r\n    value, \r\n    name, \r\n    options = [], \r\n    boxStyle,\r\n    labelStyle,\r\n    inputStyle, \r\n    placeholder, \r\n    ...props\r\n}) {\r\n    \r\n    return (\r\n        <div className={classes.inputBox} style={boxStyle}>\r\n            <label className={classes.label} htmlFor={name} style={labelStyle}>\r\n                {label}\r\n            </label>\r\n            {\r\n                type === 'select' && <select \r\n                    className={classes.select}\r\n                    style={inputStyle}\r\n                    name={name}\r\n                    id={name}\r\n                    value={value}\r\n                    {...props} >\r\n                        <option value=''>select</option>\r\n                        {\r\n                            options.map((value, i) => {\r\n                                return <option key={value + i} value={value}> {value} </option>\r\n                            })\r\n                        }\r\n                </select>\r\n            }\r\n            {\r\n                type === 'textarea' && <textarea\r\n                    name={name}\r\n                    style={inputStyle}\r\n                    placeholder={placeholder}\r\n                    value={value}\r\n                    id={name}\r\n                    {...props} />\r\n            }\r\n            {\r\n                (type === 'date' || type === 'number' || type === 'text') && <input \r\n                    className={classes.input}\r\n                    style={inputStyle}\r\n                    type={type}\r\n                    name={name}\r\n                    id={name}\r\n                    value={value}\r\n                    {...props} />\r\n            }\r\n            { error && <span className={classes.errorMessage} id={`${name}Error`}>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","export const open = function(dbName, dbVersion) {\r\n  return new Promise((resolve, reject) => {\r\n    const openEvent = indexedDB.open(dbName, dbVersion)\r\n    openEvent.onsuccess = (e) => resolve(e.target.result)\r\n    openEvent.onerror = (e) => reject(e.target.result)\r\n  })\r\n}\r\n\r\nexport const getAllKeys = function(db, storeName) {\r\n  return new Promise((resolve, reject) => {\r\n    const openEvent = db.transaction(storeName, 'readonly').objectStore(storeName).getAllKeys()\r\n    openEvent.onsuccess = (e) => resolve(e.target.result)\r\n    openEvent.onerror = (e) => reject(e.target.result)\r\n  })\r\n}\r\n\r\nexport const getDataByKey = function(db, storeName, key) {\r\n  return new Promise((resolve, reject) => {\r\n    const openEvent = db.transaction(storeName, 'readonly').objectStore(storeName).get(key);\r\n    openEvent.onsuccess = (e) => resolve(e.target.result);\r\n    openEvent.onerror = (e) => reject(e.target.result);\r\n  })\r\n}\r\n\r\nexport const getDataByIndex = function(db, storeName, indexName, indexValue) {\r\n  return new Promise((resolve, reject) => {\r\n    const index = db.transaction(storeName, 'readonly').objectStore(storeName).index(indexName);\r\n    const openEvent = index.getAll(indexValue);\r\n    openEvent.onsuccess = (e) => resolve(e.target.result);\r\n    openEvent.onerror = (e) => reject(e.target.result);\r\n  })\r\n}\r\n\r\nexport const getAllData = function(db, storeName) {\r\n  return new Promise((resolve, reject) => {\r\n    const openEvent = db.transaction(storeName, 'readonly').objectStore(storeName).getAll();\r\n    openEvent.onsuccess = (e) => resolve(e.target.result);\r\n    openEvent.onerror = (e) => reject(e.target.result);\r\n  })\r\n}\r\n\r\nexport const addData = function(db, storeName, data) {\r\n  return new Promise((resolve, reject) => {\r\n    const openEvent = db.transaction(storeName, 'readwrite').objectStore(storeName).add(data);\r\n    openEvent.onsuccess = (e) => resolve(e.target.result);\r\n    openEvent.onerror = (e) => reject(e.target.error);\r\n  })\r\n}","import { addData, getAllData, getAllKeys, getDataByIndex, getDataByKey, open } from \"./core\";\r\n\r\n// IndexedDB..  ##########################\r\nexport const _dbVersion = 1;\r\nexport const openRequest = indexedDB.open('sbm', _dbVersion);\r\n\r\nopenRequest.onupgradeneeded = function(e) {\r\n  let db = openRequest.result;\r\n  switch(e.oldVersion) {\r\n    case 0:\r\n      db.createObjectStore('products', {keyPath: 'productName'});\r\n      const personsStore = db.createObjectStore('persons', {keyPath: 'personId'});\r\n        personsStore.createIndex('personName_index', 'personName');\r\n        personsStore.createIndex('personContact_index', 'personContact');\r\n      const entriesStore = db.createObjectStore('entries', {keyPath: 'timeStamp'});\r\n        entriesStore.createIndex('transactionDate_index', 'transactionDate');\r\n        entriesStore.createIndex('transactionType_index', 'transactionType');\r\n        entriesStore.createIndex('person_index', 'person');\r\n        entriesStore.createIndex('product_index', 'product');\r\n      break;\r\n    default:\r\n      console.log('default case')\r\n  }\r\n}\r\n\r\nopenRequest.onerror = function() {\r\n  console.log('error connecting/opening database', openRequest.error);\r\n}\r\nopenRequest.onsuccess = function() {\r\n  // console.log('database successfully opened', openRequest.result);\r\n}\r\n\r\n\r\n// ============================    SET      ==============================\r\n\r\nexport async function _saveData(data, storeName) {\r\n  const db = await open('sbm', _dbVersion);\r\n  const request = await addData(db, storeName, data);\r\n  return request;\r\n}\r\n\r\n// // Save data to store..\r\n// export function _saveToLocal(obj, config, updateState) {\r\n//   const {storeName, transactionType = 'readwrite' } = config;\r\n//   // connect to database\r\n//   const db = openRequest.result;\r\n//   // create transaction\r\n//   const transaction = db.transaction(storeName, transactionType);\r\n//   // select store\r\n//   const store = transaction.objectStore(storeName);\r\n//   // create add request\r\n//   const request = store.add(obj);\r\n\r\n//   // listen to events\r\n//   request.onerror = function() {\r\n//     console.log(`${storeName} request error ${request.error}`);\r\n//   }\r\n//   request.onsuccess = function() {\r\n//     console.log(`${storeName} request successfully made ${request.result}`);\r\n//     // update state here.. by calling callback func.\r\n//     updateState(storeName, obj);\r\n//   }\r\n// }\r\n\r\n// Update data...\r\nexport function _updateStoreData(updatedData, config) {\r\n  const { storeName } = config;\r\n\r\n  const db = openRequest.result;    // connect to database\r\n  const transaction = db.transaction(storeName, 'readwrite');   // create transaction\r\n  const store = transaction.objectStore(storeName);   // select store\r\n  const request = store.put(updatedData);   // create put request\r\n\r\n  request.onerror = function() {\r\n    console.log(`${storeName} update request error ${request.error}`);\r\n  }\r\n  request.onsuccess = function() {\r\n    console.log(`${storeName} update request successful ${request.result}`)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// ========================     GET      ========================================\r\nexport async function _getDataByIndex(indexParams) {\r\n  const { storeName, indexName, indexValue } = indexParams;\r\n  const db = await open('sbm', _dbVersion);\r\n  const data = await getDataByIndex(db, storeName, indexName, indexValue);\r\n  return data;\r\n}\r\n\r\nexport async function _getDataByKey(getParams) {\r\n  const { storeName, key } = getParams;\r\n  const db = await open('sbm', _dbVersion);\r\n  const data = await getDataByKey(db, storeName, key);\r\n  return data;\r\n}\r\n\r\nexport async function _getAllData(storeName) {\r\n  const db = await open('sbm', _dbVersion);\r\n  const data = await getAllData(db, storeName);\r\n  return data;\r\n}\r\n\r\n// export function _getAllData(storeNames, setState) {\r\n//   const openRequest = indexedDB.open('sbm', _dbVersion);\r\n//   openRequest.onsuccess = function() {\r\n//     let db = openRequest.result;\r\n//     let transaction = db.transaction(storeNames, 'readonly')\r\n\r\n//     if(Array.isArray(storeNames)) {\r\n//       storeNames.map((storeName) => {\r\n//         const objectStore = transaction.objectStore(storeName);\r\n\r\n//         objectStore.getAll().onsuccess = function(e) {\r\n//           setState((prevState) => {\r\n//             return {\r\n//               ...prevState,\r\n//               [storeName]: e.target.result\r\n//             }\r\n//           })\r\n//         }\r\n//         return null; // just to remove console warning.\r\n//       })\r\n//     } else {\r\n//       const objectStore = transaction.objectStore(storeNames);\r\n//       objectStore.getAll().onsuccess = function(e) {\r\n//           setState((prevState) => {\r\n//             if(Array.isArray(prevState)) {\r\n//               return [\r\n//                 ...prevState,\r\n//                 ...e.target.result\r\n//               ]\r\n//             } else {\r\n//               return {\r\n//                 ...prevState,\r\n//                 [storeNames]: e.target.result\r\n//               }\r\n//             }\r\n//           })\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n// only for single store..\r\n// export function _getAllData(storeName, setState) {\r\n//   // let storeData;\r\n//   let db = openRequest.result;\r\n//   let objectStore = db.transaction(storeName, 'readonly').objectStore(storeName);\r\n\r\n//   objectStore.getAll().onsuccess = function(e) {\r\n//     console.log('got all' + storeName, e.target.result)\r\n//     setState(e.target.result)\r\n//     // storeData = e.target.result;\r\n//   }\r\n\r\n//   // return storeData;  // this statement runs before onsuccess completes..  #so used callback.\r\n// }\r\n\r\nexport async function _getAllKeys(storeName) {\r\n  try {\r\n    const db = await open('sbm', _dbVersion);\r\n    const keys = await getAllKeys(db, storeName)\r\n    return keys;\r\n  } catch(err) {\r\n    console.log(err)\r\n    return []\r\n  }\r\n  \r\n}\r\n","import { _getAllKeys } from \"../../indexedDB\";\r\n// blueprint :-> Array of objects\r\n// accumulator :-> Object\r\n// extract 'name' prop from bluprint objects, add it to accumulator, return accumulator......\r\nexport function _createStateObject(blueprint, accumulator = {}) {\r\n    blueprint.map((obj) => {\r\n        return accumulator[obj.name] = ''\r\n    })\r\n    return accumulator;\r\n}\r\n\r\n\r\nexport let _generateUniquePersonId = (async function() {\r\n    const keys = await _getAllKeys('persons');\r\n  \r\n    const savedIds = {};\r\n    keys.map((key) => {\r\n      savedIds[key] = key;\r\n      return null;\r\n    });\r\n  \r\n    _generateUniquePersonId = (keyLength, saveThisId) => {\r\n      // to update closure's saveIds object..\r\n      if(saveThisId) {\r\n        savedIds[saveThisId] = saveThisId;\r\n        console.log('Ids', savedIds);\r\n        return saveThisId;\r\n      }\r\n      const includeOnly = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\r\n          'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\r\n          '0','1','2','3','4','5','6','7','8','9']; // 62\r\n      \r\n      let uniqueKey = '';\r\n      while (uniqueKey.length !== keyLength || savedIds[uniqueKey] ) {\r\n          uniqueKey = '';\r\n          for(let i=0; i<keyLength; i++) {\r\n              let index = Math.floor(Math.random() * includeOnly.length);\r\n              uniqueKey += includeOnly[index];\r\n          }\r\n      }\r\n      console.log('unique key', uniqueKey)\r\n      return uniqueKey;\r\n    }\r\n  })();\r\n\r\n\r\nexport const validateAndSetErrors = (inputData, inputValidationRules, setErrors) => {\r\n  let errors = validate(inputData, inputValidationRules);\r\n  let isErrors = keysCount(errors);\r\n  let noOfInputs = keysCount(inputData);\r\n  if(noOfInputs > 1) {\r\n    setErrors(errors)\r\n  } else if (noOfInputs === 1) {\r\n    if(isErrors) {\r\n      setErrors((prevErrors) => {\r\n        return {...prevErrors, ...errors}\r\n      });\r\n    } else {\r\n      // set errors by removing current input error.\r\n      setErrors((prevErrors) => {\r\n        let key = Object.keys(inputData)[0];\r\n        prevErrors[key] && delete(prevErrors[key]);\r\n        return {...prevErrors};\r\n      })\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n// return 'false' breaks(finishes) 'every()' immidiately \r\nfunction validate(data, rules) {\r\n    const error = {};\r\n    Object.keys(rules).forEach((input) => {\r\n      Object.keys(rules[input]).every((ruleType) => {\r\n        switch(ruleType) {\r\n          case 'required': \r\n            if(rules[input][ruleType] && data[input].length === 0) {\r\n              error[input] = 'required field';\r\n              return false;\r\n            }\r\n            return true;\r\n          case 'minLength':\r\n            if(data[input].length < rules[input]['minLength']) {\r\n              error[input] = 'Too short';\r\n              return false;\r\n            }\r\n            return true;\r\n          case 'maxLength':\r\n            if(data[input].length > rules[input]['maxLength']) {\r\n              error[input] = 'Too Long';\r\n              return false;\r\n            }\r\n            return true;\r\n          case 'fixedLength':\r\n            if(data[input].length !== rules[input]['fixedLength']) {\r\n              error[input] = `length must be ${rules[input]['fixedLength']}`;\r\n              return false;\r\n            }\r\n            return true;\r\n          case 'greaterThan':\r\n            if(data[input] <= rules[input]['greaterThan']) {\r\n              error[input] = `value must be greater than ${rules[input]['greaterThan']}`;\r\n              return false;\r\n            }\r\n            return true;\r\n          default:\r\n            console.log('no error')\r\n        }\r\n      });\r\n    });\r\n    return error;\r\n}\r\n\r\nexport function keysCount(obj) {\r\n  return Object.keys(obj).length;\r\n}\r\n\r\n// function _getFactor(num) {\r\n//     let factor = num;\r\n//     for(let i=num - 1; i>=1; i--) {\r\n//         factor *= i\r\n//     }\r\n//     return factor || 1;\r\n// }\r\n\r\n\r\n// function _getCombinationsNumber(groupSet, groupSubSet) {\r\n//     const numberOfCombinations = _getFactor(groupSet) /\r\n//         (_getFactor(groupSubSet) * _getFactor(groupSet - groupSubSet))\r\n//     return numberOfCombinations;\r\n// }\r\n\r\n\r\n\r\n// working..\r\n// export function _generateUniqueId(idLength, savedIds = {}) { // number, obj of id as keys.\r\n//     const includeOnly = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\r\n//         'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\r\n//         '0','1','2','3','4','5','6','7','8','9']; // 62\r\n    \r\n//     let id = '';\r\n//     while (id.length !== idLength || savedIds[id] ) {\r\n//         id = '';\r\n//         for(let i=0; i<idLength; i++) {\r\n//             let index = Math.floor(Math.random() * includeOnly.length);\r\n//             id += includeOnly[index];\r\n//         }\r\n//     }\r\n//     return id;\r\n// }","import React from 'react';\r\nimport classes from './style.module.css';\r\n\r\nfunction Button({type, style, onClick, children, className, ...props}) {\r\n\r\n    return(\r\n        <button type={type}\r\n            onClick={onClick}\r\n            className={`${classes.button} ${className} ${style}`}\r\n            {...props}>\r\n                {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","// MANAGE PERSONS..\r\nexport const managePersonsRules = {\r\n    personId: {\r\n        required: true,\r\n        fixedLength: 7\r\n    },\r\n    personName: {\r\n        required: true,\r\n        minLength: 3,\r\n        maxLength: 20\r\n    },\r\n    personSurName: {\r\n        required: true,\r\n        minLength: 3,\r\n        maxLength: 20\r\n    },\r\n    personContact: {\r\n        required: true,\r\n        fixedLength: 10\r\n    },\r\n    personAddress: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 50\r\n    }\r\n}\r\n\r\n// CREATE ENTRY..\r\nconst createEntryCommonRules = {\r\n    transactionDate: {\r\n        required: true\r\n    },\r\n    person: {\r\n        required: true\r\n    },\r\n    transactionType: {\r\n        required: true\r\n    },\r\n    description: {\r\n        maxLength: 50\r\n    },\r\n}\r\nconst createEntryProductRules = {\r\n    product: {\r\n        required: true\r\n    },\r\n    quantity: {\r\n        required: true,\r\n        greaterThan: 0\r\n    },\r\n    pricePer: {\r\n        required: true,\r\n        greaterThan: 0\r\n    },\r\n}\r\nexport const createEntryRules = {\r\n    'sales': {\r\n        ...createEntryCommonRules,\r\n        ...createEntryProductRules,\r\n        cashReceived: {\r\n            required: true,\r\n            greaterThan: -1\r\n        },\r\n        totalDiscount: {\r\n            greaterThan: -1\r\n        },\r\n        amountLeft: {\r\n            required: true,\r\n            greaterThan: -1\r\n        },\r\n    },\r\n    'purchases': {\r\n        ...createEntryCommonRules,\r\n        ...createEntryProductRules,\r\n        cashPaid: {\r\n            required: true,\r\n            greaterThan: -1\r\n        },\r\n        totalDiscount: {\r\n            greaterThan: -1\r\n        },\r\n        amountLeft: {\r\n            required: true,\r\n            greaterThan: -1\r\n        },\r\n    },\r\n    'payments': {\r\n        ...createEntryCommonRules,\r\n        cashPaid: {\r\n            required: true,\r\n            greaterThan: 0\r\n        },\r\n        totalDiscount: {\r\n            greaterThan: -1\r\n        }\r\n    },\r\n    'receipts': {\r\n        ...createEntryCommonRules,\r\n        cashReceived: {\r\n            required: true,\r\n            greaterThan: 0\r\n        },\r\n        totalDiscount: {\r\n            greaterThan: -1\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { _createEntryCommonBlueprint, _createEntryBluprints } from '../../../utility/bluePrints';\r\nimport Input from '../../../utility/input';\r\nimport { keysCount, validateAndSetErrors, _createStateObject } from '../../../utility/helperFunctions';\r\nimport classes from './style.module.css'\r\nimport Button from '../../../utility/button';\r\nimport { createEntryRules as entryValidationRules } from '../../../utility/validationRules';\r\n\r\nconst initialEntry = _createStateObject(_createEntryCommonBlueprint);\r\nconst rememberEntryObj = { transactionDate: true, person: true };\r\n\r\n// COMPONENT !!!\r\nfunction CreateEntry({persons, products, save}) {\r\n\tconst [entry, setEntry] = useState({...initialEntry});\r\n\tconst [errors, setErrors] = useState({});\r\n\tconst [validateOnChange, setValidateOnChange] = useState(false);\r\n\r\n\t// select list options..(Array)\r\n\tconst personsList = persons.map((person) => person.personName)\r\n\tconst productsList = products.map((product) => product.productName)\r\n\tconst transactionTypesList = ['sales', 'purchases', 'payments', 'receipts'];\r\n\r\n\tuseEffect(() => {\r\n\t\t// sets initial transaction type\r\n\t\tsetEntryObj('sales');\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetErrors({});\r\n\t\tsetValidateOnChange(false)\r\n\t}, [entry.transactionType])\r\n\r\n\tuseEffect(() => {\r\n\t\t// calculating and autofiling inputs\r\n\t\tsetEntry((prevState) => {\r\n\t\t\tlet totalAmount = prevState.quantity * prevState.pricePer;\r\n\t\t\tlet amountLeft;\r\n\t\t\tif(prevState.transactionType === 'sales') {\r\n\t\t\t\tamountLeft = totalAmount - prevState.cashReceived - prevState.totalDiscount;\r\n\t\t\t} else if(prevState.transactionType === 'purchases') {\r\n\t\t\t\tamountLeft = totalAmount - prevState.cashPaid - prevState.totalDiscount;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...prevState,\r\n\t\t\t\ttotalAmount: totalAmount,\r\n\t\t\t\tamountLeft: amountLeft\r\n\t\t\t}\r\n\t\t})\r\n\t}, [entry.quantity, entry.pricePer, entry.cashReceived, entry.totalDiscount, entry.cashPaid])\r\n\t\r\n\tconst getInputValue = (e) => {\r\n\t\tsetEntry((prev) => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\t[e.target.name] : e.target.value\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst setEntryObj = (transactionType, remember) => {\r\n\t\tconst entryObj = transactionType ? \r\n\t\t\t{ ...initialEntry, ..._createStateObject(_createEntryBluprints[transactionType]) } : \r\n\t\t\tinitialEntry;\r\n\t\tentryObj.transactionType = transactionType;\r\n\t\t// set values marked as remember..\r\n\t\tif(remember) {\r\n\t\t\tObject.keys(remember).map((key) => {\r\n\t\t\t\treturn entryObj.hasOwnProperty(key) && (entryObj[key] = entry[key])\r\n\t\t\t})\r\n\t\t}\r\n\t\tsetEntry(() => entryObj);\r\n\t}\r\n\r\n\tconst saveEntry = () => {\r\n\t\tconsole.log(entry.transactionType, 'transactionType', entry)\r\n\t\tconst errors = validateAndSetErrors(entry, entryValidationRules[entry.transactionType], setErrors);\r\n\t\tconst isErrors = keysCount(errors)\r\n\t\tif(isErrors) {\r\n\t\t\tsetValidateOnChange(true);\r\n\t\t\talert('invalid form values')\r\n\t\t} else {\r\n\t\t\tconst timeStamp = new Date().getTime();\r\n\t\t\tentry.timeStamp = timeStamp; // entry time.. also the key for entry objectStore.\r\n\t\t\tsave(entry, {storeName: 'entries'});\r\n\r\n\t\t\tsetValidateOnChange(false);\r\n\t\t\tsetEntryObj(entry.transactionType, rememberEntryObj)\r\n\t\t\talert('entry saved successfully')\r\n\t\t}\r\n\t}\r\n\r\n\tconst generateInputElements = (blueprint) => {\r\n\t\tlet inputElements =  blueprint.map((configObj) => {\r\n\t\t\tconst { name, type, label } = configObj;\r\n\t\t\tlet optionsList = []\r\n\t\t\tif(type === 'select') {\r\n\t\t\t\toptionsList = (name === 'person') ? personsList :\r\n\t\t\t\t\t(name === 'product') ? productsList :\r\n\t\t\t\t\t(name === 'transactionType') && transactionTypesList;\r\n\t\t\t}\r\n\t\t\treturn <Input \r\n\t\t\t\tkey={name}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tlabel={label}\r\n\t\t\t\toptions={type === 'select' && optionsList}\r\n\t\t\t\tname={name} \r\n\t\t\t\tdisabled={(name === 'totalAmount' || name === 'amountLeft') && true}\r\n\t\t\t\terror={errors[name]}\r\n\t\t\t\tvalue={entry[name]}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tname === 'transactionType' && setEntryObj(e.target.value, rememberEntryObj);\r\n\t\t\t\t\tgetInputValue(e);\r\n\t\t\t\t\tvalidateOnChange && validateAndSetErrors(\r\n\t\t\t\t\t\t{ [e.target.name]: e.target.value },\r\n\t\t\t\t\t\t{ [e.target.name]: entryValidationRules[entry.transactionType][e.target.name] },\r\n\t\t\t\t\t\tsetErrors\r\n\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t});\r\n\r\n\t\treturn inputElements;\r\n\t}\r\n\r\n\r\n\t//  render...\r\n\treturn (\r\n\t\t<div className={classes.createEntryBox}>\r\n\t\t\t<div className={classes.leftBox}>\r\n\t\t\t\t{\r\n\t\t\t\t\tgenerateInputElements(_createEntryCommonBlueprint)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<hr className={classes.divider} />\r\n\t\t\t<div className={classes.rightBox}>\r\n\t\t\t\t{\r\n\t\t\t\t\tentry.transactionType ?\r\n\t\t\t\t\t\tgenerateInputElements(_createEntryBluprints[entry.transactionType]) :\r\n\t\t\t\t\t\t'Select Transaction type..'\r\n\t\t\t\t}\r\n\t\t\t\t<Button onClick={saveEntry}\r\n\t\t\t\t\tdisabled={entry.transactionType === '' && true}>Save Entry</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CreateEntry;","import React from 'react';\r\nimport classes from './style.module.css';\r\n\r\nfunction Table({ headerRow, bodyRows, caption }) {\r\n\r\n    return (\r\n        <table className={classes.table}>\r\n            <caption>{caption}</caption>\r\n            <thead className={classes.thead}>\r\n                {headerRow}\r\n            </thead>\r\n            <tbody className={classes.tbody}>\r\n                {bodyRows}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;","import React, { useEffect, useState } from 'react';\r\n\r\nimport Input from '../../../utility/input';\r\nimport { _personsBlueprint } from '../../../utility/bluePrints';\r\nimport { keysCount, validateAndSetErrors, _createStateObject, _generateUniquePersonId } from '../../../utility/helperFunctions';\r\nimport classes from './style.module.css';\r\nimport Button from '../../../utility/button';\r\nimport Table from '../../../utility/table';\r\nimport { _getDataByIndex, _getDataByKey, _updateStoreData } from '../../../indexedDB';\r\nimport { managePersonsRules as personValidationRules } from '../../../utility/validationRules';\r\n\r\nconst initialPersonObj = _createStateObject(_personsBlueprint);\r\n\r\nfunction ManagePersons({ save }) {\r\n\tconst [person, setPerson] = useState(initialPersonObj);\r\n\tconst [editPerson, setEditPerson] = useState(false);\r\n\tconst [searchBy, setSearchBy] = useState('name')\r\n\tconst [searchText, setSerchText] = useState('');\r\n\tconst [searchResult, setSearchResult] = useState([]);\r\n\tconst [errors, setErrors] = useState({});\r\n\tconst [validateOnChange, setValidateOnChange] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!editPerson) {\r\n\t\t\tconst personId = _generateUniquePersonId(7)\r\n\t\t\tsetPerson({\r\n\t\t\t\t...initialPersonObj,\r\n\t\t\t\tpersonId: personId\r\n\t\t\t})\r\n\t\t} else if(editPerson) {\r\n\t\t\tsetPerson(initialPersonObj);\r\n\t\t}\r\n\r\n\t\tsetErrors({});\r\n\t\tsetValidateOnChange(false)\r\n\t}, [editPerson])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSerchText('')\r\n\t}, [searchBy])\r\n\r\n\r\n\r\n\tconst getInputValue = (e) => {\r\n\t\tsetPerson({\r\n\t\t\t...person,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\t\r\n\t}\r\n\r\n\tconst savePerson = () => {\r\n\t\tconst errors = validateAndSetErrors(person, personValidationRules, setErrors);\r\n\t\tconst isErrors = keysCount(errors);\r\n\t\tif(isErrors) {\r\n\t\t\tsetValidateOnChange(true);\r\n\t\t\talert('Invalid Form values');\r\n\t\t} else {\r\n\t\t\tsave(person, {storeName: 'persons'});\r\n\t\t\t\r\n\t\t\t// to update closure.\r\n\t\t\t_generateUniquePersonId(null, person.personId);\r\n\t\t\t// reset input fields and generate new personId.\r\n\t\t\tconst personId = _generateUniquePersonId(7)\r\n\t\t\tsetPerson({\r\n\t\t\t\t\t...initialPersonObj,\r\n\t\t\t\t\tpersonId: personId\r\n\t\t\t});\r\n\t\t\tsetValidateOnChange(false);\r\n\t\t\talert('Person Saved Successfully');\r\n\t\t}\r\n\t}\r\n\r\n\tconst updatePerson = () => {\r\n\t\tconst errors = validateAndSetErrors(person, personValidationRules, setErrors);\r\n\t\tconst isErrors = keysCount(errors);\r\n\t\tif(isErrors) {\r\n\t\t\tsetValidateOnChange(true)\r\n\t\t\talert('Invalid Form values');\r\n\t\t} else {\r\n\t\t\t_updateStoreData(person, {storeName: 'persons'})\r\n\t\t\tsetPerson({\r\n\t\t\t\t\t...initialPersonObj,\r\n\t\t\t});\r\n\t\t\tsetValidateOnChange(false);\r\n\t\t\talert('Person Updated Successfully');\r\n\t\t}\r\n\t}\r\n\t\r\n\tasync function handlePersonIdChange(e) {\r\n\t\tconst id = e.target.value;\r\n\t\tif (id.length !== 7) { return; }\r\n\r\n\t\tconst person = await _getDataByKey({storeName: 'persons', key: id});\r\n\t\tif(!person) {\r\n\t\t\talert(`There is no person with personId ${id}`);\r\n\t\t\tsetPerson({\r\n\t\t\t\t\t...initialPersonObj\r\n\t\t\t})\r\n\t\t\tsetErrors({});\r\n\t\t} else {\r\n\t\t\tsetPerson(person);\r\n\t\t\tsetErrors({})\r\n\t\t}\r\n\t}\r\n\r\n\tasync function searchPersons() {\r\n\t\tconst indexArgs = {\r\n\t\t\tstoreName: 'persons',\r\n\t\t\tindexName: (searchBy === 'name' ? 'personName_index' : 'personContact_index'),\r\n\t\t\tindexValue: searchText\r\n\t\t}\r\n\t\tconst result = await _getDataByIndex(indexArgs);\r\n\t\tsetSearchResult(result); // []\r\n\t}\r\n\r\n\tconst headerRow = <tr>\r\n\t\t<th>personId</th>\r\n\t\t<th>personName</th>\r\n\t\t<th>personSurName</th>\r\n\t\t<th>personContact</th>\r\n\t\t<th>personAddress</th>\r\n\t</tr>;\r\n\r\n\tconst bodyRows = searchResult.map((person) => {\r\n\t\tconst { personId, personName, personSurName, personContact, personAddress } = person;\r\n\t\treturn <tr key={personId}>\r\n\t\t\t<td>{personId}</td>\r\n\t\t\t<td>{personName}</td>\r\n\t\t\t<td>{personSurName}</td>\r\n\t\t\t<td>{personContact}</td>\r\n\t\t\t<td>{personAddress}</td>\r\n\t\t</tr>\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className={classes.managePersonsBox}>\r\n\t\t\t<div className={classes.personBox}>\r\n\t\t\t\t<h2 className={classes.title}>Manage Persons</h2>\r\n\t\t\t\t{\r\n\t\t\t\t\t_personsBlueprint.map((inputEl) => {\r\n\t\t\t\t\t\tlet {name, type, label} = inputEl;\r\n\t\t\t\t\t\treturn <Input \r\n\t\t\t\t\t\t\tkey={name} \r\n\t\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\t\tlabel={label} \r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tdisabled={!editPerson && name === 'personId' ? true : false}\r\n\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\teditPerson && name === 'personId' && handlePersonIdChange(e);\r\n\t\t\t\t\t\t\t\tgetInputValue(e);\r\n\t\t\t\t\t\t\t\tvalidateOnChange && validateAndSetErrors(\r\n\t\t\t\t\t\t\t\t\t{ [e.target.name]: e.target.value },\r\n\t\t\t\t\t\t\t\t\t{ [e.target.name]: personValidationRules[e.target.name] },\r\n\t\t\t\t\t\t\t\t\tsetErrors\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terror={errors[name]}\r\n\t\t\t\t\t\t\tvalue={person[name]} />\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<Button \r\n\t\t\t\t\ttype='button' \r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\teditPerson  \r\n\t\t\t\t\t\t\t? updatePerson(person, {storeName: 'persons'})\r\n\t\t\t\t\t\t\t: savePerson(person, {storeName: 'persons'})\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{editPerson ? 'Update Person' : 'Create Person'}</Button>\r\n\r\n\t\t\t\t<Button \r\n\t\t\t\t\ttype='button' \r\n\t\t\t\t\tclassName={classes.editPersonTogglerBtn}\r\n\t\t\t\t\tonClick={() => setEditPerson(!editPerson)}>\r\n\t\t\t\t\t\t{editPerson ? 'Create New Peron' : 'Edit Person'}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{ editPerson && <hr className={classes.divider} /> }\r\n\r\n\t\t\t{\r\n\t\t\t\teditPerson && <div className={classes.searchPersonBox}>\r\n\t\t\t\t\t<div className={classes.searchType}> \r\n\t\t\t\t\t\t<span>By:</span> \r\n\t\t\t\t\t\t<Button type=\"button\" onClick={() => setSearchBy('name')}>Name</Button>\r\n\t\t\t\t\t\t<Button type=\"button\" onClick={() => setSearchBy('number')}>Number</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\ttype={searchBy === 'name' ? 'text' : searchBy === 'number' && 'number'} \r\n\t\t\t\t\t\tlabel={searchBy === 'name' ? 'Enter Person Name' : searchBy === 'number' && 'Enter Person Number'}\r\n\t\t\t\t\t\tonChange={(e) => setSerchText(e.target.value)}\r\n\t\t\t\t\t\tvalue={searchText} />\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\ttype=\"button\" \r\n\t\t\t\t\t\tonClick={searchPersons}>Search</Button>\r\n\t\t\t\t\t<div className={classes.searchResult}>\r\n\t\t\t\t\t\t<h3>Search Results</h3>\r\n\t\t\t\t\t\t<Table headerRow={headerRow} bodyRows={bodyRows} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ManagePersons;","import React, { useState } from 'react';\r\nimport Input from '../../../utility/input';\r\nimport { _productsBlueprint } from '../../../utility/bluePrints';\r\nimport { _createStateObject } from '../../../utility/helperFunctions';\r\nimport classes from './style.module.css';\r\nimport Button from '../../../utility/button';\r\n\r\nconst defaultProductObj = _createStateObject(_productsBlueprint);\r\n\r\nfunction ManageProducts({save}) {\r\n    const [product, setProduct] = useState(defaultProductObj);\r\n\r\n    const getInputValue = (e) => {\r\n        setProduct({\r\n            ...product,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    const saveProduct = () => {\r\n        save(product, {storeName: 'products'});\r\n        alert('Product saved successfully');\r\n        setProduct(defaultProductObj)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.manageProductsBox}>\r\n            <h2 className={classes.title}>Manage Products</h2>\r\n            {\r\n                _productsBlueprint.map((inputEl) => {\r\n                    let {name, type, label} = inputEl;\r\n                    return <Input \r\n                        key={name} \r\n                        type={type}\r\n                        label={label} \r\n                        name={name}\r\n                        value={product[name]}\r\n                        onChange={getInputValue} />\r\n                })\r\n            }\r\n            <Button type='button' onClick={() => saveProduct()}>Save Product</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageProducts;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { _getDataByIndex } from '../../../../indexedDB';\r\nimport Table from '../../../../utility/table';\r\nimport classes from './style.module.css';\r\n\r\nconst DayBook = () => {\r\n    const [dayBook, setDayBook] = useState([]);\r\n    const [entriesDate, setEntriesDate] = useState('')\r\n    const [stickyRight, setstickyRight] = useState({});\r\n    const stickyRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getAndSetEntries();\r\n    }, [entriesDate])\r\n\r\n    useEffect(() => {\r\n        // setting the current date to view day book entries..\r\n        let currentDate = new Date();\r\n        let year = currentDate.getFullYear();\r\n        let month = currentDate.getMonth() + 1;\r\n        let date = currentDate.getDate();\r\n\r\n        if(month.toString().length === 1) month = '0' + month;\r\n        if(date.toString().length === 1) date = '0' + date;\r\n\r\n        let fullDate = `${year}-${month}-${date}`;\r\n\r\n        setEntriesDate(fullDate);\r\n    }, [])\r\n\r\n    // find and set the position of sticky element from right (cashPaid element's width in this case).\r\n    useEffect(() => {\r\n        // setting initial sticky right position..\r\n        const ref = stickyRef.current;\r\n        console.log(ref.clientWidth, ref.width)\r\n        setstickyRight({right: ref.clientWidth});\r\n\r\n        // setting sticky right position on screen change..\r\n        window.onresize = (event) => {\r\n            const ref = stickyRef.current;\r\n            console.log(ref.clientWidth)\r\n            setstickyRight({right: ref.clientWidth + 'px'});\r\n        };\r\n\r\n        return () => {\r\n            window.onresize = null;\r\n        }\r\n    }, [])\r\n\r\n    const getAndSetEntries = async () => {\r\n        const data = await _getDataByIndex({ storeName: 'entries', \r\n            indexName: 'transactionDate_index', \r\n            indexValue: entriesDate\r\n        });\r\n\r\n        setDayBook(data);\r\n    }\r\n\r\n\r\n    const headerRow = <tr>\r\n        <th className={classes.stickyHeader}>Trn Type</th>\r\n        <th className={classes.stickyHeader}>Person</th>\r\n        <th className={classes.stickyHeader}>Product</th>\r\n        <th className={classes.stickyHeader}>Qty</th>\r\n        <th className={classes.stickyHeader}>Price</th>\r\n        <th style={stickyRight} className={`${classes.stickyReceived} ${classes.stickyHeader}`}>Received</th>\r\n        <th ref={stickyRef} className={`${classes.stickyPaid} ${classes.stickyHeader}`}>Paid</th>\r\n    </tr>;\r\n\r\n    let tableData = dayBook.map((entry, i) => {\r\n        const {person, transactionType, product, quantity, pricePer,\r\n             totalAmount, cashReceived, cashPaid, totalDiscount, amountLeft} = entry;\r\n        return <tr key={i}>\r\n            <td>{transactionType}</td>\r\n            <td>{person}</td>\r\n            <td>{product}</td>\r\n            <td type=\"number\">{quantity}</td>\r\n            <td type=\"number\">{pricePer}</td>\r\n            <td type=\"number\" style={stickyRight} className={`${classes.stickyReceived} ${classes.columnReceived}`}>{cashReceived}</td>\r\n            <td type=\"number\" className={`${classes.stickyPaid} ${classes.columnPaid}`}>{cashPaid}</td>\r\n        </tr>\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Table headerRow={headerRow} bodyRows={tableData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayBook;","import React, { useState, useEffect } from 'react';\r\nimport { _getDataByIndex } from '../../../../indexedDB';\r\nimport Table from '../../../../utility/table';\r\nimport classes from './style.module.css';\r\n\r\nconst TransactionTypeBook = ({ transactionType }) => {\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAndSetEntries();\r\n    }, [])\r\n\r\n    const getAndSetEntries = async () => {\r\n        const data = await _getDataByIndex({ storeName: 'entries', \r\n            indexName: 'transactionType_index', \r\n            indexValue: transactionType\r\n        });\r\n\r\n        setEntries(data);\r\n    }\r\n\r\n    // header row of table..\r\n    const headerRow = <tr>\r\n        <th>Person</th>\r\n        {\r\n            (transactionType === 'purchases' || transactionType === 'sales') &&\r\n            <>\r\n                <th>Product</th>\r\n                <th>Qty</th>\r\n                <th>Price</th>\r\n            </>\r\n        }\r\n        {\r\n            (transactionType === 'sales' || transactionType === 'receipts') &&\r\n                <th className={classes.sticky}>Received</th>\r\n        }\r\n        {\r\n            (transactionType === 'purchases' || transactionType === 'payments') &&\r\n                <th className={classes.sticky}>Paid</th>\r\n        }\r\n    </tr>;\r\n\r\n    // table data rows..\r\n    let tableData = entries.map((entry, i) => {\r\n        const {person, transactionType, product, quantity, pricePer,\r\n             totalAmount, cashReceived, cashPaid, totalDiscount, amountLeft} = entry;\r\n        return <tr key={i}>\r\n            <td>{person}</td>\r\n            {\r\n                (transactionType === 'purchases' || transactionType === 'sales') &&\r\n                <>\r\n                    <td>{product}</td>\r\n                    <td>{quantity}</td>\r\n                    <td>{pricePer}</td>\r\n                </>\r\n            }\r\n            {\r\n                (transactionType === 'sales' || transactionType === 'receipts') &&\r\n                    <td className={classes.sticky}>{cashReceived}</td>\r\n            }\r\n            {\r\n                (transactionType === 'purchases' || transactionType === 'payments') &&\r\n                    <td className={classes.sticky}>{cashPaid}</td>\r\n            }\r\n        </tr>\r\n    })\r\n\r\n    return (\r\n        <h3>TransactionType Book</h3>\r\n        // <Table headerRow={headerRow} bodyRows={tableData} />\r\n    )\r\n}\r\n\r\nexport default TransactionTypeBook;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { _getDataByIndex } from '../../../../indexedDB';\r\nimport Table from '../../../../utility/table';\r\nimport classes from './style.module.css';\r\n\r\nconst ProductBook = ({ product }) => {\r\n    // const [selectedProduct, setSelectedProduct] = useState('Rockstrong');\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAndSetEntries(product);\r\n    }, [product])\r\n\r\n\r\n    const getAndSetEntries = async (selectedProduct) => {\r\n        const data = await _getDataByIndex({ storeName: 'entries', \r\n            indexName: 'product_index', \r\n            indexValue: selectedProduct\r\n        });\r\n        console.log(data, 'product Data');\r\n        setEntries(data);\r\n    }\r\n\r\n    const purchasesHeaderRow = <tr>\r\n        <th>Person</th>\r\n        <th>Price</th>\r\n        <th>Qty</th>\r\n    </tr>;\r\n    const salesHeaderRow = <tr>\r\n        <th>Person</th>\r\n        <th>Price</th>\r\n        <th>Qty</th>\r\n    </tr>;\r\n\r\n    const purchasesTableData = [];\r\n    const salesTableData = [];\r\n\r\n    entries.map((entry, i) => {\r\n        const {person, transactionType, product, quantity, pricePer,\r\n             totalAmount, cashReceived, cashPaid, totalDiscount, amountLeft} = entry;\r\n\r\n        let row = <tr key={i}>\r\n            <td>{person}</td>\r\n            <td>{pricePer}</td>\r\n            <td>{quantity}</td>\r\n        </tr>\r\n\r\n        if(transactionType === 'sales') {\r\n            salesTableData.push(row);\r\n        } else if(transactionType === 'purchases') {\r\n            purchasesTableData.push(row);\r\n        }\r\n\r\n\r\n        return null;\r\n    })\r\n\r\n    return(\r\n        <div className={classes.twoColumns}>\r\n            <h3>Product Book</h3>\r\n            {/* <div className={classes.grow_1}>\r\n                <Table \r\n                    caption=\"Purchases\"\r\n                    headerRow={purchasesHeaderRow} \r\n                    bodyRows={purchasesTableData} />\r\n            </div>\r\n            <div className={classes.grow_1}>\r\n                <Table \r\n                    caption=\"Sales\"\r\n                    headerRow={salesHeaderRow} \r\n                    bodyRows={salesTableData} />\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductBook;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { _getDataByIndex } from '../../../../indexedDB';\r\nimport Table from '../../../../utility/table';\r\nimport classes from './style.module.css';\r\n\r\nconst PersonBook = ({ person }) => {\r\n    // const [selectedPerson, setSelectedPerson] = useState('Saim');\r\n    const [entries, setEntries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAndSetEntries(person);\r\n    }, [person])\r\n\r\n    const getAndSetEntries = async (selectedPerson) => {\r\n        const data = await _getDataByIndex({ storeName: 'entries', \r\n            indexName: 'person_index', \r\n            indexValue: selectedPerson\r\n        });\r\n        console.log(data, 'person Data');\r\n        setEntries(data);\r\n    }\r\n\r\n    const debitHeaderRow = <tr>\r\n        <th>Date</th>\r\n        <th>Trn Type</th>\r\n        <th>Dr.</th>\r\n    </tr>;\r\n    const creditHeaderRow = <tr>\r\n        <th>Date</th>\r\n        <th>Trn Type</th>\r\n        <th>Cr.</th>\r\n    </tr>;\r\n\r\n\r\n    const debitTableData = [];\r\n    const creditTableData = [];\r\n\r\n    entries.map((entry, i) => {\r\n        const {person, transactionType, transactionDate, product, quantity, pricePer,\r\n            totalAmount, cashReceived, cashPaid, totalDiscount, amountLeft} = entry;\r\n            \r\n        if((transactionType === 'sales' || transactionType === 'purchases') && amountLeft <= 0) {\r\n            return;\r\n        }\r\n\r\n        let amount;\r\n        if(transactionType === 'sales' || transactionType === 'purchases') {\r\n            amount = amountLeft;\r\n        } else if(transactionType === 'receipts') {\r\n            amount = cashReceived;\r\n        } else if(transactionType === 'payments') {\r\n            amount = cashPaid;\r\n        }\r\n\r\n        let row = <tr key={i}>\r\n            <td>{transactionDate}</td>\r\n            <td>{transactionType}</td>\r\n            <td>{amount}</td>\r\n        </tr>\r\n\r\n        if(transactionType === 'sales' || transactionType === 'payments') {\r\n            debitTableData.push(row);\r\n        } else if(transactionType === 'purchases' || transactionType === 'receipts') {\r\n            creditTableData.push(row);\r\n        }\r\n\r\n\r\n        return null;\r\n    })\r\n\r\n    return(\r\n        <div className={classes.twoColumns}>\r\n            <h3>Person Book</h3>\r\n            {/* <div className={classes.grow_1}>\r\n                <Table \r\n                    caption=\"Debit\"\r\n                    headerRow={debitHeaderRow} \r\n                    bodyRows={debitTableData} />\r\n            </div>\r\n            <div className={classes.grow_1}>\r\n                <Table \r\n                    caption=\"Credit\"\r\n                    headerRow={creditHeaderRow} \r\n                    bodyRows={creditTableData} />\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonBook;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { _getDataByIndex } from '../../../../indexedDB';\r\n// import Table from '../../../../utility/table';\r\n// import classes from './style.module.css';\r\n\r\n// const PersonBook = () => {\r\n//     const [selectedPerson, setSelectedPerson] = useState('Saim');\r\n//     const [entries, setEntries] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         getAndSetEntries();\r\n//     }, [selectedPerson])\r\n\r\n//     const getAndSetEntries = async () => {\r\n//         const data = await _getDataByIndex({ storeName: 'entries', \r\n//             indexName: 'person_index', \r\n//             indexValue: selectedPerson\r\n//         });\r\n//         console.log(data, 'person Data');\r\n//         setEntries(data);\r\n//     }\r\n\r\n//     const headerRow = <tr>\r\n//         <th>Date</th>\r\n//         <th>Trn Type</th>\r\n//         <th>Price</th>\r\n//         <th>Qty</th>\r\n//         <th>Net Amount</th>\r\n//         <th>Received</th>\r\n//         <th>Left</th>\r\n//     </tr>;\r\n\r\n\r\n//     const tableData = entries.map((entry, i) => {\r\n//         const {person, transactionType, transactionDate, product, quantity, pricePer,\r\n//              totalAmount, cashReceived, cashPaid, totalDiscount, amountLeft} = entry;\r\n//         const netAmount = totalAmount - totalDiscount;\r\n        \r\n//         return <tr key={i}>\r\n//             <td>{transactionDate}</td>\r\n//             <td>{transactionType}</td>\r\n//             <td>{pricePer}</td>\r\n//             <td>{quantity}</td>\r\n//             <td>{netAmount}</td>\r\n//             <td>{cashReceived}</td>\r\n//             <td>{amountLeft}</td>\r\n//         </tr>;\r\n//     })\r\n\r\n//     return(\r\n//         <Table headerRow={headerRow} bodyRows={tableData} />\r\n//     )\r\n// }\r\n\r\n// export default PersonBook;","import React from \"react\";\r\n\r\nexport const ExpandDown = ({ fill, width = '14', height = '14' }) => {\r\n  return(\r\n    <svg \r\n      fill={fill}\r\n      width={width} \r\n      height={height}\r\n      viewBox=\"0 0 512 298.04\">\r\n        <path\r\n          d=\"M12.08 70.78c-16.17-16.24-16.09-42.54.15-58.7 16.25-16.17 42.54-16.09 58.71.15L256 197.76 441.06 \r\n          12.23c16.17-16.24 42.46-16.32 58.71-.15 16.24 16.16 16.32 42.46.15 58.7L285.27 285.96c-16.24 16.17-42.54 \r\n          16.09-58.7-.15L12.08 70.78z\"/>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport const ExpandUp = ({ fill, width = '14', height = '14' }) => {\r\n  return(\r\n    <svg\r\n      fill={fill}\r\n      width={width} \r\n      height={height}\r\n      viewBox=\"0 0 512 298.04\">\r\n        <path\r\n          d=\"M70.94 285.81c-16.17 16.24-42.46 16.32-58.71.15-16.24-16.16-16.32-42.46-.15-58.7L226.57 \r\n          12.23c16.16-16.24 42.46-16.32 58.7-.15l214.65 215.18c16.17 16.24 16.09 42.54-.15 58.7-16.25 \r\n          16.17-42.54 16.09-58.71-.15L256 100.29 70.94 285.81z\"/>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport const MenuBars = ({ fill, width = '14', height = '14', style }) => {\r\n  return(\r\n    <svg \r\n      fill={fill}\r\n      width={width} \r\n      height={height}\r\n      style={style}\r\n      viewBox=\"0 0 122.879 103.609\">\r\n        <g>\r\n          <path \r\n            d=\"M10.368,0h102.144c5.703,0,10.367,4.665,10.367,10.367v0 \r\n            c0,5.702-4.664,10.368-10.367,10.368H10.368C4.666,20.735,0,16.07,0,10.368v0C0,4.665,4.666,0,10.368,0L10.368,0z \r\n            M10.368,82.875 h102.144c5.703,0,10.367,4.665,10.367,10.367l0,0c0,5.702-4.664,10.367-10.367,10.367H10.368C4.666,\r\n            103.609,0,98.944,0,93.242l0,0 C0,87.54,4.666,82.875,10.368,82.875L10.368,82.875z M10.368,41.438h102.144c5.703,\r\n            0,10.367,4.665,10.367,10.367l0,0 c0,5.702-4.664,10.368-10.367,10.368H10.368C4.666,62.173,0,57.507,0,51.805l0,\r\n            0C0,46.103,4.666,41.438,10.368,41.438 L10.368,41.438z\"/>\r\n        </g>\r\n    </svg>\r\n  )\r\n}\r\nexport const FilterIcon = ({ fill, width = '14', height = '14', style }) => {\r\n  return(\r\n    <svg \r\n      fill={fill}\r\n      width={width} \r\n      height={height}\r\n      style={style}\r\n      viewBox=\"0 0 122.879 103.609\">\r\n        <g>\r\n        <path\r\n          d=\"M122.774,16.459L122.774,16.459c0,5.393-4.412,9.805-9.805,\r\n          9.805H92.202 c1.457-2.919,2.278-6.212,2.278-9.697c0-3.571-0.861-6.941-2.387-9.913h20.876C118.362,6.654,\r\n          122.774,11.066,122.774,16.459 L122.774,16.459z M89.306,101.257c0,9.15-7.418,16.567-16.568,\r\n          16.567s-16.567-7.417-16.567-16.567 c0-9.149,7.417-16.567,16.567-16.567S89.306,92.107,89.306,\r\n          101.257L89.306,101.257z M122.869,101.148L122.869,101.148 c0,5.393-4.413,9.805-9.806,\r\n          9.805H92.202c1.457-2.919,2.278-6.212,2.278-9.696c0-3.571-0.861-6.941-2.387-9.913h20.97 \r\n          C118.457,91.344,122.869,95.756,122.869,101.148L122.869,101.148z M53.272,\r\n          110.953H9.816c-5.393,0-9.805-4.412-9.805-9.805l0,0 c0-5.393,4.412-9.805,\r\n          9.805-9.805h43.565c-1.525,2.972-2.387,6.342-2.387,9.913C50.994,104.741,51.815,108.034,53.272,110.953 \r\n          L53.272,110.953z M28.326,58.717c0,9.149,7.418,16.567,16.568,16.567c9.149,0,16.567-7.418,16.567-16.567 \r\n          c0-9.15-7.418-16.568-16.567-16.568C35.744,42.148,28.326,49.566,28.326,58.717L28.326,58.717z M0,58.608L0,\r\n          58.608 c0,5.393,4.414,9.805,9.805,9.805h15.675c-1.457-2.92-2.278-6.169-2.278-9.696c0-3.528,0.861-6.941,\r\n          2.387-9.914H9.805 C4.412,48.803,0,53.215,0,58.608L0,58.608z M64.409,68.413h48.666c5.392,0,9.805-4.412,\r\n          9.805-9.805l0,0 c0-5.394-4.412-9.806-9.805-9.806H64.301c1.525,2.973,2.387,6.386,2.387,9.914C66.688,\r\n          62.244,65.866,65.493,64.409,68.413 L64.409,68.413z M89.306,16.567c0,9.15-7.418,16.567-16.568,16.567S56.17,\r\n          25.718,56.17,16.567C56.17,7.417,63.587,0,72.737,0 S89.306,7.417,89.306,16.567L89.306,16.567z M53.272,\r\n          26.264H9.853c-5.393,0-9.805-4.413-9.805-9.805l0,0 c0-5.393,4.412-9.805,9.805-9.805h43.528c-1.525,\r\n          2.972-2.387,6.342-2.387,9.913C50.994,20.052,51.815,23.345,53.272,26.264 L53.272,26.264z\"/>\r\n        </g>\r\n    </svg>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport classes from './style.module.css';\r\nimport DayBook from './dayBook';\r\nimport TransactionTypeBook from './transactionTypeBook';\r\nimport ProductBook from './productBook';\r\nimport PersonBook from './personBook';\r\nimport Input from '../../../utility/input';\r\nimport { _getAllData } from '../../../indexedDB';\r\nimport { ExpandDown, ExpandUp, FilterIcon } from '../../../utility/svgIcons/icons';\r\n\r\n\r\nfunction View({ entryOf }) {\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\t\tconst [optionsList, setOptionsList] = useState([]);\r\n\t\tconst [showFilterBar, setShowFilterBar] = useState(true)\r\n\r\n\t\t// for select list options fetch all data from store based on type of entry\r\n\t\t// and map over data to get list of index values (personName, productName)\r\n\t\tuseEffect(() => {\r\n\t\t\tif(entryOf === 'personBook' || entryOf === 'productBook') {\r\n\t\t\t\tconst getAndSetOptionsList = async () => {\r\n\t\t\t\t\tconst storeName = (entryOf === 'personBook') ? 'persons' : \r\n\t\t\t\t\t\t(entryOf === 'productBook') && 'products';\r\n\r\n\t\t\t\t\tconst data = await _getAllData(storeName);\r\n\r\n\t\t\t\t\tconst optionsListArr = data.map((obj) => {\r\n\t\t\t\t\t\tconst option = (entryOf === 'personBook') ? obj.personName : \r\n\t\t\t\t\t\t\t(entryOf === 'productBook') && obj.productName;\r\n\t\t\t\t\t\t\treturn option;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tsetOptionsList(optionsListArr);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetAndSetOptionsList()\r\n\t\t\t}\r\n\t\t}, [entryOf])\r\n\r\n\t\tuseEffect(() => { // handle filter bar toggle\r\n\t\t\tif(entryOf === 'personBook' || entryOf === 'productBook') {\r\n\t\t\t\tsetShowFilterBar(true)\r\n\t\t\t} else {\r\n\t\t\t\tsetShowFilterBar(false)\r\n\t\t\t}\r\n\t\t}, [entryOf])\r\n\r\n    return(\r\n        <div className={classes.viewContainer}>\r\n            <div className={`${classes.filterBar} ${!showFilterBar && classes.slideUpFilterBar}`}>\r\n                {\r\n\t\t\t\t\t\t\t\t\t(entryOf === 'personBook' || entryOf === 'productBook') && <Input \r\n\t\t\t\t\t\t\t\t\t\ttype='select' \r\n\t\t\t\t\t\t\t\t\t\toptions={optionsList}\r\n\t\t\t\t\t\t\t\t\t\tvalue={selectedValue}\r\n\t\t\t\t\t\t\t\t\t\tboxStyle={{'width': '200px', 'marginBottom': '0px'}}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSelectedValue(e.target.value)} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className={classes.filterIconBox}>\r\n\t\t\t\t\t\t\t\t\t<FilterIcon width='24px' height='24px' fill={'Grey'} />\r\n\t\t\t\t\t\t\t\t</div>\r\n            </div>\r\n\t\t\t\t\t\t<div className={classes.filterBarToggler} onClick={() => setShowFilterBar(!showFilterBar)}>\r\n\t\t\t\t\t\t\t{ showFilterBar ? <ExpandUp fill={'#004b4b'} /> : <ExpandDown fill={'#004b4b'} /> }\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* entries table */}\r\n\t\t\t\t\t\t<div className={`${classes.viewEntriesBox} ${showFilterBar && classes.ViewEntriesWithFilterBar}`}>\r\n            <div className={classes.entries}>\r\n                { entryOf === 'dayBook' && <DayBook /> } \r\n                    \r\n                {\r\n                    (entryOf === 'purchases' \r\n                    || entryOf === 'sales' \r\n                    || entryOf === 'payments' \r\n                    || entryOf === 'receipts') \r\n                    && <TransactionTypeBook transactionType={entryOf} />\r\n                }\r\n\r\n                { entryOf === 'productBook' && <ProductBook product={selectedValue} />}\r\n\r\n                { entryOf === 'personBook' && <PersonBook person={selectedValue} />}\r\n            </div>\r\n\t\t\t\t\t\t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View;","import React, { useState } from \"react\";\r\nimport classes from './style.module.css';\r\nimport Button from \"../../utility/button\";\r\nimport { ExpandUp, ExpandDown } from \"../../utility/svgIcons/icons\";\r\n\r\nconst SideNav = ({ setScreen, setEntryOf, showSideNav }) => {\r\n    const [viewDropdown, setViewDropdown] = useState(false);\r\n\r\n\t\tconst handleClick = (screen, entryOf) => {\r\n\t\t\tsetScreen(screen);\r\n\t\t\tentryOf && setEntryOf(entryOf);\r\n\t\t\t(entryOf || screen && screen !== 'viewEntries') && showSideNav(false);\r\n\t\t}\r\n\r\n    return(\r\n\t\t\t<nav className={classes.sideNavBar}>\r\n\t\t\t\t{/* SideNav Header */}\r\n\t\t\t\t<div className={classes.sideNav_Header}>\r\n\t\t\t\t\t<div className={classes.brandBox}>\r\n\t\t\t\t\t\t<div className={classes.brandLogo}>EBM</div>\r\n\t\t\t\t\t\t<h5 className={classes.brandName}>Easy Business Manager</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button style={classes.btnClose} onClick={() => showSideNav(false)}>X</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* SIdeNav Links */}\r\n\t\t\t\t<ul className={classes.navList}>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\tonClick={() => handleClick('createEntry')}>Create Entry</Button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\tonClick={() => handleClick('managePersons')}>Manage Persons</Button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\tonClick={() => handleClick('manageProducts')}>Manage Products</Button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\tstyle={`${classes.btnList} ${classes.btnWithIcon}`} \r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetViewDropdown(!viewDropdown);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<span className={classes.btnText}>View</span>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tviewDropdown \r\n\t\t\t\t\t\t\t\t\t? <span className={classes.btnIcon}><ExpandUp fill={'#c9c9c9cc'} /></span> \r\n\t\t\t\t\t\t\t\t\t: <span className={classes.btnIcon}><ExpandDown fill={'#c9c9c9cc'} /></span>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{/* Toggle View Entries Dropdown List on 'view' state change */}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tviewDropdown && <ul className={classes.navListNested}>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick('viewEntries', 'dayBook')}>Day Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick('viewEntries', 'personBook')}>Person Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick('viewEntries', 'productBook')}>Product Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick('viewEntries', 'purchases')}>Purchases Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>handleClick('viewEntries', 'sales')}>Sales Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick('viewEntries', 'payments')}>Payments Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tstyle={classes.btnList} \r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick('viewEntries', 'receipts')}>Receipts Book</Button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n    )\r\n}\r\n\r\nexport default SideNav;","import React from 'react';\r\nimport Button from '../../utility/button';\r\nimport { MenuBars } from '../../utility/svgIcons/icons';\r\nimport classes from './style.module.css';\r\n\r\nconst screenTitles = {\r\n  'createEntry': 'Create Entry',\r\n  'managePersons': 'Manage Persons',\r\n  'manageProducts': 'Manage Products',\r\n  'dayBook': 'Day Book',\r\n  'personBook': 'Person Book',\r\n  'productBook': 'Product Book',\r\n  'purchases': 'Purchases Book',\r\n  'sales': 'Sales Book',\r\n  'payments': 'Payments Book',\r\n  'receipts': 'Receipts Book'\r\n}\r\n\r\nconst Header = ({ activeScreen, viewEntriesOf, showSideNav }) => {\r\n  return(\r\n    <header className={classes.header}>\r\n      <Button style={classes.sideBarToggler} onClick={() => {showSideNav(true)}}>\r\n        <MenuBars width={24} height={24} style={{'marginBottom': '-5px'}} />\r\n      </Button>\r\n      <h2 className={classes.activeScreenTitle}>\r\n        { activeScreen !== 'viewEntries' ? screenTitles[activeScreen] : screenTitles[viewEntriesOf] }\r\n      </h2>\r\n      <div className={classes.info}>\r\n        Other Info\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport CreateEntry from './components/screens/createEntry';\r\nimport ManagePersons from './components/screens/managePersons';\r\nimport ManageProducts from './components/screens/manageProducts';\r\nimport View from './components/screens/view';\r\nimport SideNav from './components/sideNav';\r\nimport { _getAllData, _saveData } from './indexedDB';\r\nimport classes from './ebm/style.module.css';\r\nimport Header from './components/header';\r\n\r\nfunction App() {\r\n  const [sbm, setSbm] = useState({\r\n    products: [],\r\n    persons: [],\r\n  });\r\n  const [screen, setScreen] = useState('viewEntries');\r\n  const [entryOf, setEntryOf] = useState('dayBook');\r\n  const [showSideNav, setShowSideNav] = useState(false);\r\n\r\n  const updateState_sbm = (stateName, obj) => {\r\n    const updated_sbm = {...sbm};\r\n    updated_sbm[stateName].push(obj);\r\n    setSbm(updated_sbm);\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const products = await _getAllData('products');\r\n      const persons = await _getAllData('persons');\r\n      setSbm({\r\n        products: products,\r\n        persons: persons\r\n      })\r\n    })()\r\n  }, [])\r\n\r\n  const saveToLocal = async (obj, config) => {\r\n    const { storeName } = config;\r\n    const request = await _saveData(obj, storeName);\r\n\r\n    storeName !== 'entries' && request && setSbm((prevSbm) => {\r\n      prevSbm[storeName].push(obj);\r\n      return prevSbm\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      { showSideNav && <div className={classes.overlay} onClick={() => setShowSideNav(false)} /> }\r\n      <div className={`${classes.sideNavContainer} ${showSideNav && classes.show_sideNav}`}>\r\n        <SideNav setScreen={setScreen} setEntryOf={setEntryOf} showSideNav={setShowSideNav} />\r\n      </div>\r\n      \r\n      <div className={classes.subContainer}>\r\n        <div className={classes.headerContainer}>\r\n          <Header activeScreen={screen} viewEntriesOf={entryOf} showSideNav={setShowSideNav} />\r\n        </div>\r\n        <div className={classes.content}>\r\n          {\r\n            (screen === 'createEntry') && <CreateEntry \r\n              persons={sbm.persons} \r\n              products={sbm.products}\r\n              save={saveToLocal} />\r\n          }\r\n          {\r\n            (screen === 'managePersons') && <ManagePersons save={saveToLocal} persons={[...sbm.persons]} />\r\n          }\r\n          {\r\n            (screen === 'manageProducts') && <ManageProducts save={saveToLocal} />\r\n          }\r\n          {\r\n            (screen === 'viewEntries') && <View entryOf={entryOf} />\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}